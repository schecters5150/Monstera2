//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/Player/Input Master.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputMaster : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputMaster()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Input Master"",
    ""maps"": [
        {
            ""name"": ""Platformer"",
            ""id"": ""cd761177-1191-4f91-95cb-aae73ed2b179"",
            ""actions"": [
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""c4b2aed3-79fe-4ac2-9a59-aa1c27a7c118"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""36078816-0ef5-48eb-b534-d06c97c9baef"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Hover"",
                    ""type"": ""Button"",
                    ""id"": ""f65eb6cc-c1ac-49e9-b8b3-ebe09b7db98b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Parry"",
                    ""type"": ""Button"",
                    ""id"": ""a8ba5497-8a0d-452a-9055-1f5ca362a44a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SpellSwap"",
                    ""type"": ""Button"",
                    ""id"": ""ed109987-0f3d-4150-b627-68958b46925f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ItemLeft"",
                    ""type"": ""Button"",
                    ""id"": ""cff41503-2838-48c0-82e8-b48322ad6901"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ItemRight"",
                    ""type"": ""Button"",
                    ""id"": ""203df961-470a-4b3b-812e-d962eb17acf2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HealSwap"",
                    ""type"": ""Button"",
                    ""id"": ""7aee5fc1-2673-486f-84e9-cf969a0ac77d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Spell"",
                    ""type"": ""Button"",
                    ""id"": ""3dbe3719-3e89-4693-b0f4-8a48e86a91ae"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dodge"",
                    ""type"": ""Button"",
                    ""id"": ""7e0e3d34-da36-4312-8187-c0b0b82b5557"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AttackRight"",
                    ""type"": ""Button"",
                    ""id"": ""48e44910-a7e0-4dde-b1af-9d758e453b82"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": ""AxisDeadzone"",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AttackLeft"",
                    ""type"": ""Button"",
                    ""id"": ""af0b3da9-2de7-4733-98c9-0497bd11bda5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": ""AxisDeadzone"",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AttackUp"",
                    ""type"": ""Button"",
                    ""id"": ""9bf9805c-75ce-49a2-90ec-fed74287a204"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": ""AxisDeadzone"",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AttackDown"",
                    ""type"": ""Button"",
                    ""id"": ""cf0dc3a0-e2c7-402a-b675-fda017d1b0ad"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": ""AxisDeadzone(min=0.2)"",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Start"",
                    ""type"": ""Button"",
                    ""id"": ""6877f1ed-90ac-4e7f-a483-244fdbfef57e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Heal"",
                    ""type"": ""Button"",
                    ""id"": ""bc84dbf6-152b-4176-86e7-8c07ded16636"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Zoom"",
                    ""type"": ""Button"",
                    ""id"": ""3860caba-223f-49f7-8a6c-f2541a03eb7b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""da3fe65e-720c-4083-80b0-6d6a837806db"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""0f362236-bff6-4329-8d35-67d27e6cb918"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""40207b04-95be-41bd-b4db-d36ff2d0f4b4"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""ce4105af-d4c9-4597-93b4-977b3a2a9f2f"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""063d4237-388c-4f35-9e4d-04687c8ed633"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""66b2679d-2647-4537-8494-03e0d8b033ff"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e7f2137c-560b-413f-96b5-e2e617943b1c"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""2251438e-0594-49b0-bbc4-913e273bca24"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""7187fe44-46db-4b06-a047-ff2f7929d82a"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""a22d9465-d662-474f-8edc-f7b563e349af"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""fa7bc916-17a7-4993-bf32-0027cf6d5121"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hover"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4521b62a-d4a5-49a8-a063-075cca760e69"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hover"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3c65d18c-2141-4646-85eb-dba2a9eeb425"",
                    ""path"": ""<Keyboard>/alt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dodge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9f67f886-f52b-4ac2-a537-7b7692096e42"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dodge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d1442ae9-c2bb-4e51-b8d2-0041518f0a6f"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AttackRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""362f0fd0-aacc-4758-bf22-95b82e2fd53c"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AttackRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""64f2ea96-ab13-475d-9606-1ff027977447"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AttackLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c9151712-759b-4c9e-9a37-ce72e22c2757"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AttackLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f0608b12-cfe3-4f67-869f-f225b0c04db5"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AttackUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""340e8036-dbd2-4b4d-8faf-7d329c6b040b"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AttackUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f74cc731-753f-411a-84dc-05cde631c729"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AttackDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""79ebeec9-af36-4d54-ad0a-ec54f834fdb7"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AttackDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d57d09d1-3c11-4cb1-a651-f30273c7743c"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""21d25c2e-71a0-4dcd-b744-76569f2620d3"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone"",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""58b6fd2e-c3fb-41ad-a97d-6ab0be1e8aea"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Start"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0e8c65e6-bf91-450a-9304-eb03cd2e9a77"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Start"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cd659ddb-e454-4f26-9748-8d58548c8a9f"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Heal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""271eebce-d570-4d9f-8ba1-e7a838dba8cd"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Heal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8edb7f06-3b0c-4191-92f3-db4ce14df868"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eb498e69-57b7-4e5c-a55e-377f6aad3618"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""043f986f-21b4-4df7-8ff7-6706e13bdb73"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Parry"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""da8ff513-0006-444e-89b4-6a04d5defa7b"",
                    ""path"": ""<Keyboard>/rightCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Parry"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d9664359-8365-483f-bacb-52b19ca7f939"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spell"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bebd4001-2d29-4fb8-81b8-5b54fc7de34c"",
                    ""path"": ""<Keyboard>/rightShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spell"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c53851dc-f9ac-45c8-bd02-9e6392b5e438"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpellSwap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d5fbc4fd-4dbe-4c50-8d02-a0ebde243227"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpellSwap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""92b93dbb-95f7-49df-8b8f-446b7abf57d1"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ItemLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6a669955-fe7f-455d-9d56-04ea4b38a399"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ItemLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dcc4ef18-5c99-4f06-8477-0828543c1313"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ItemRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3e42a436-befe-4541-a7a9-9c0e85b853bd"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ItemRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c1a53f9d-995a-49b9-a5d5-d0a2a2f21a5c"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HealSwap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""42f1005f-d9ed-4b09-9aa1-9a971eacb2e7"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HealSwap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""New action map"",
            ""id"": ""cd2cbc2f-da2d-4018-b3aa-f9b0828e61ef"",
            ""actions"": [
                {
                    ""name"": ""New action"",
                    ""type"": ""Button"",
                    ""id"": ""4b238df0-88b1-4082-a5cd-1310c3c9cf8e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""b503782e-485e-4d4d-bf3f-6b36b3e789f4"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""New action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Xbox"",
            ""bindingGroup"": ""Xbox"",
            ""devices"": [
                {
                    ""devicePath"": ""<XInputController>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Platformer
        m_Platformer = asset.FindActionMap("Platformer", throwIfNotFound: true);
        m_Platformer_Jump = m_Platformer.FindAction("Jump", throwIfNotFound: true);
        m_Platformer_Movement = m_Platformer.FindAction("Movement", throwIfNotFound: true);
        m_Platformer_Hover = m_Platformer.FindAction("Hover", throwIfNotFound: true);
        m_Platformer_Parry = m_Platformer.FindAction("Parry", throwIfNotFound: true);
        m_Platformer_SpellSwap = m_Platformer.FindAction("SpellSwap", throwIfNotFound: true);
        m_Platformer_ItemLeft = m_Platformer.FindAction("ItemLeft", throwIfNotFound: true);
        m_Platformer_ItemRight = m_Platformer.FindAction("ItemRight", throwIfNotFound: true);
        m_Platformer_HealSwap = m_Platformer.FindAction("HealSwap", throwIfNotFound: true);
        m_Platformer_Spell = m_Platformer.FindAction("Spell", throwIfNotFound: true);
        m_Platformer_Dodge = m_Platformer.FindAction("Dodge", throwIfNotFound: true);
        m_Platformer_AttackRight = m_Platformer.FindAction("AttackRight", throwIfNotFound: true);
        m_Platformer_AttackLeft = m_Platformer.FindAction("AttackLeft", throwIfNotFound: true);
        m_Platformer_AttackUp = m_Platformer.FindAction("AttackUp", throwIfNotFound: true);
        m_Platformer_AttackDown = m_Platformer.FindAction("AttackDown", throwIfNotFound: true);
        m_Platformer_Start = m_Platformer.FindAction("Start", throwIfNotFound: true);
        m_Platformer_Heal = m_Platformer.FindAction("Heal", throwIfNotFound: true);
        m_Platformer_Zoom = m_Platformer.FindAction("Zoom", throwIfNotFound: true);
        // New action map
        m_Newactionmap = asset.FindActionMap("New action map", throwIfNotFound: true);
        m_Newactionmap_Newaction = m_Newactionmap.FindAction("New action", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Platformer
    private readonly InputActionMap m_Platformer;
    private IPlatformerActions m_PlatformerActionsCallbackInterface;
    private readonly InputAction m_Platformer_Jump;
    private readonly InputAction m_Platformer_Movement;
    private readonly InputAction m_Platformer_Hover;
    private readonly InputAction m_Platformer_Parry;
    private readonly InputAction m_Platformer_SpellSwap;
    private readonly InputAction m_Platformer_ItemLeft;
    private readonly InputAction m_Platformer_ItemRight;
    private readonly InputAction m_Platformer_HealSwap;
    private readonly InputAction m_Platformer_Spell;
    private readonly InputAction m_Platformer_Dodge;
    private readonly InputAction m_Platformer_AttackRight;
    private readonly InputAction m_Platformer_AttackLeft;
    private readonly InputAction m_Platformer_AttackUp;
    private readonly InputAction m_Platformer_AttackDown;
    private readonly InputAction m_Platformer_Start;
    private readonly InputAction m_Platformer_Heal;
    private readonly InputAction m_Platformer_Zoom;
    public struct PlatformerActions
    {
        private @InputMaster m_Wrapper;
        public PlatformerActions(@InputMaster wrapper) { m_Wrapper = wrapper; }
        public InputAction @Jump => m_Wrapper.m_Platformer_Jump;
        public InputAction @Movement => m_Wrapper.m_Platformer_Movement;
        public InputAction @Hover => m_Wrapper.m_Platformer_Hover;
        public InputAction @Parry => m_Wrapper.m_Platformer_Parry;
        public InputAction @SpellSwap => m_Wrapper.m_Platformer_SpellSwap;
        public InputAction @ItemLeft => m_Wrapper.m_Platformer_ItemLeft;
        public InputAction @ItemRight => m_Wrapper.m_Platformer_ItemRight;
        public InputAction @HealSwap => m_Wrapper.m_Platformer_HealSwap;
        public InputAction @Spell => m_Wrapper.m_Platformer_Spell;
        public InputAction @Dodge => m_Wrapper.m_Platformer_Dodge;
        public InputAction @AttackRight => m_Wrapper.m_Platformer_AttackRight;
        public InputAction @AttackLeft => m_Wrapper.m_Platformer_AttackLeft;
        public InputAction @AttackUp => m_Wrapper.m_Platformer_AttackUp;
        public InputAction @AttackDown => m_Wrapper.m_Platformer_AttackDown;
        public InputAction @Start => m_Wrapper.m_Platformer_Start;
        public InputAction @Heal => m_Wrapper.m_Platformer_Heal;
        public InputAction @Zoom => m_Wrapper.m_Platformer_Zoom;
        public InputActionMap Get() { return m_Wrapper.m_Platformer; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlatformerActions set) { return set.Get(); }
        public void SetCallbacks(IPlatformerActions instance)
        {
            if (m_Wrapper.m_PlatformerActionsCallbackInterface != null)
            {
                @Jump.started -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnJump;
                @Movement.started -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnMovement;
                @Hover.started -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnHover;
                @Hover.performed -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnHover;
                @Hover.canceled -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnHover;
                @Parry.started -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnParry;
                @Parry.performed -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnParry;
                @Parry.canceled -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnParry;
                @SpellSwap.started -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnSpellSwap;
                @SpellSwap.performed -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnSpellSwap;
                @SpellSwap.canceled -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnSpellSwap;
                @ItemLeft.started -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnItemLeft;
                @ItemLeft.performed -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnItemLeft;
                @ItemLeft.canceled -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnItemLeft;
                @ItemRight.started -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnItemRight;
                @ItemRight.performed -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnItemRight;
                @ItemRight.canceled -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnItemRight;
                @HealSwap.started -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnHealSwap;
                @HealSwap.performed -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnHealSwap;
                @HealSwap.canceled -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnHealSwap;
                @Spell.started -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnSpell;
                @Spell.performed -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnSpell;
                @Spell.canceled -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnSpell;
                @Dodge.started -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnDodge;
                @Dodge.performed -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnDodge;
                @Dodge.canceled -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnDodge;
                @AttackRight.started -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnAttackRight;
                @AttackRight.performed -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnAttackRight;
                @AttackRight.canceled -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnAttackRight;
                @AttackLeft.started -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnAttackLeft;
                @AttackLeft.performed -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnAttackLeft;
                @AttackLeft.canceled -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnAttackLeft;
                @AttackUp.started -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnAttackUp;
                @AttackUp.performed -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnAttackUp;
                @AttackUp.canceled -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnAttackUp;
                @AttackDown.started -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnAttackDown;
                @AttackDown.performed -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnAttackDown;
                @AttackDown.canceled -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnAttackDown;
                @Start.started -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnStart;
                @Start.performed -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnStart;
                @Start.canceled -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnStart;
                @Heal.started -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnHeal;
                @Heal.performed -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnHeal;
                @Heal.canceled -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnHeal;
                @Zoom.started -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnZoom;
                @Zoom.performed -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnZoom;
                @Zoom.canceled -= m_Wrapper.m_PlatformerActionsCallbackInterface.OnZoom;
            }
            m_Wrapper.m_PlatformerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Hover.started += instance.OnHover;
                @Hover.performed += instance.OnHover;
                @Hover.canceled += instance.OnHover;
                @Parry.started += instance.OnParry;
                @Parry.performed += instance.OnParry;
                @Parry.canceled += instance.OnParry;
                @SpellSwap.started += instance.OnSpellSwap;
                @SpellSwap.performed += instance.OnSpellSwap;
                @SpellSwap.canceled += instance.OnSpellSwap;
                @ItemLeft.started += instance.OnItemLeft;
                @ItemLeft.performed += instance.OnItemLeft;
                @ItemLeft.canceled += instance.OnItemLeft;
                @ItemRight.started += instance.OnItemRight;
                @ItemRight.performed += instance.OnItemRight;
                @ItemRight.canceled += instance.OnItemRight;
                @HealSwap.started += instance.OnHealSwap;
                @HealSwap.performed += instance.OnHealSwap;
                @HealSwap.canceled += instance.OnHealSwap;
                @Spell.started += instance.OnSpell;
                @Spell.performed += instance.OnSpell;
                @Spell.canceled += instance.OnSpell;
                @Dodge.started += instance.OnDodge;
                @Dodge.performed += instance.OnDodge;
                @Dodge.canceled += instance.OnDodge;
                @AttackRight.started += instance.OnAttackRight;
                @AttackRight.performed += instance.OnAttackRight;
                @AttackRight.canceled += instance.OnAttackRight;
                @AttackLeft.started += instance.OnAttackLeft;
                @AttackLeft.performed += instance.OnAttackLeft;
                @AttackLeft.canceled += instance.OnAttackLeft;
                @AttackUp.started += instance.OnAttackUp;
                @AttackUp.performed += instance.OnAttackUp;
                @AttackUp.canceled += instance.OnAttackUp;
                @AttackDown.started += instance.OnAttackDown;
                @AttackDown.performed += instance.OnAttackDown;
                @AttackDown.canceled += instance.OnAttackDown;
                @Start.started += instance.OnStart;
                @Start.performed += instance.OnStart;
                @Start.canceled += instance.OnStart;
                @Heal.started += instance.OnHeal;
                @Heal.performed += instance.OnHeal;
                @Heal.canceled += instance.OnHeal;
                @Zoom.started += instance.OnZoom;
                @Zoom.performed += instance.OnZoom;
                @Zoom.canceled += instance.OnZoom;
            }
        }
    }
    public PlatformerActions @Platformer => new PlatformerActions(this);

    // New action map
    private readonly InputActionMap m_Newactionmap;
    private INewactionmapActions m_NewactionmapActionsCallbackInterface;
    private readonly InputAction m_Newactionmap_Newaction;
    public struct NewactionmapActions
    {
        private @InputMaster m_Wrapper;
        public NewactionmapActions(@InputMaster wrapper) { m_Wrapper = wrapper; }
        public InputAction @Newaction => m_Wrapper.m_Newactionmap_Newaction;
        public InputActionMap Get() { return m_Wrapper.m_Newactionmap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(NewactionmapActions set) { return set.Get(); }
        public void SetCallbacks(INewactionmapActions instance)
        {
            if (m_Wrapper.m_NewactionmapActionsCallbackInterface != null)
            {
                @Newaction.started -= m_Wrapper.m_NewactionmapActionsCallbackInterface.OnNewaction;
                @Newaction.performed -= m_Wrapper.m_NewactionmapActionsCallbackInterface.OnNewaction;
                @Newaction.canceled -= m_Wrapper.m_NewactionmapActionsCallbackInterface.OnNewaction;
            }
            m_Wrapper.m_NewactionmapActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Newaction.started += instance.OnNewaction;
                @Newaction.performed += instance.OnNewaction;
                @Newaction.canceled += instance.OnNewaction;
            }
        }
    }
    public NewactionmapActions @Newactionmap => new NewactionmapActions(this);
    private int m_XboxSchemeIndex = -1;
    public InputControlScheme XboxScheme
    {
        get
        {
            if (m_XboxSchemeIndex == -1) m_XboxSchemeIndex = asset.FindControlSchemeIndex("Xbox");
            return asset.controlSchemes[m_XboxSchemeIndex];
        }
    }
    public interface IPlatformerActions
    {
        void OnJump(InputAction.CallbackContext context);
        void OnMovement(InputAction.CallbackContext context);
        void OnHover(InputAction.CallbackContext context);
        void OnParry(InputAction.CallbackContext context);
        void OnSpellSwap(InputAction.CallbackContext context);
        void OnItemLeft(InputAction.CallbackContext context);
        void OnItemRight(InputAction.CallbackContext context);
        void OnHealSwap(InputAction.CallbackContext context);
        void OnSpell(InputAction.CallbackContext context);
        void OnDodge(InputAction.CallbackContext context);
        void OnAttackRight(InputAction.CallbackContext context);
        void OnAttackLeft(InputAction.CallbackContext context);
        void OnAttackUp(InputAction.CallbackContext context);
        void OnAttackDown(InputAction.CallbackContext context);
        void OnStart(InputAction.CallbackContext context);
        void OnHeal(InputAction.CallbackContext context);
        void OnZoom(InputAction.CallbackContext context);
    }
    public interface INewactionmapActions
    {
        void OnNewaction(InputAction.CallbackContext context);
    }
}
